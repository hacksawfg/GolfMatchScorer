@page "/player/{playerId:int}"
@using GolfMatchScore.Shared.Models.Course
@using GolfMatchScore.Shared.Models.Player
@using GolfMatchScore.Shared.Models.Team
@using GolfMatchScore.Shared.Models.GolfRound
@attribute [Authorize]
@inject HttpClient http


@if (player == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container">
        <div class="card w-75 mx-auto">
            <div class="card-header d-flex justify-content-between">
                <h3>Player Details for @player.PlayerFirstName @player.PlayerLastName</h3>
            </div>
            <div class="card-body">
                <p class="card-text">School: <a href=@($"/team/{player.Team.TeamId}")>@player.Team.TeamSchool</a></p>
                <p class="card-text">Round History</p>
                @if (@player.Rounds != null)
                {   
                <ul class="list-group list-group-flush">
                    @foreach (var round in @player.Rounds)
                    {
                        <li class="list-group-item">Date: <a href=@($"/round/{round.RoundId}")>@round.MatchDate.ToShortDateString()</a> Score: <a href=@($"/round/{round.RoundId}")>@round.MatchScore</a>  Course: <a href=@($"/course/{round.Course.CourseId}")>@round.Course.CourseName</a></li>
                    }
                </ul>
                }
            </div>
            <div class="card-footer text-muted d-flex justify-content-between">
                <span class="text-center">Average Score: @player.PlayerAverageScore</span>
            </div>
            <div class="d-flex justify-content-center mt-3">
                <div class="text-center justify-content-between w-25">
                    <a href=@($"/player/edit/{playerId}") class="btn btn-outline-primary">Edit</a>
                    <a href=@($"/player/delete/{playerId}") class="btn btn-outline-danger">Delete</a>
                    <hr />
                    <a href="/player">Back to Player Index</a>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int playerId { get; set; }
    public PlayerDetails player { get; set; }

    protected override async Task OnInitializedAsync()
    {
        player = await http.GetFromJsonAsync<PlayerDetails>($"/api/player/{playerId}");
    }
}
