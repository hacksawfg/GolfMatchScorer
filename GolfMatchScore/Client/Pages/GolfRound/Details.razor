@page "/round/{roundId:int}"
@using GolfMatchScore.Shared.Models.Course
@using GolfMatchScore.Shared.Models.Player
@using GolfMatchScore.Shared.Models.Team
@using GolfMatchScore.Shared.Models.GolfRound
@attribute [Authorize]
@inject HttpClient http


@if (round == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container">
        <div class="card mx-auto w-75">
            <div class="card-header d-flex justify-content-between">
                <h3 class="card-title">Round Information</h3>
                <span>Score for round at @round.Course.CourseName on @round.MatchDate.ToShortDateString()</span>
            </div>
            <div class="card-body">
                <p class="card-text">Player: @round.Player.PlayerFirstName @round.Player.PlayerLastName</p>
                <p class="card-text">School: @round.Player.Team.TeamSchool</p>
                <p class="card-text">Score: @round.MatchScore</p>
            </div>
            <div class="card-footer text-muted d-flex justify-content-between">
                <span class="text-center">Location: @round.Course.CourseCity, @round.Course.CourseState</span>
            </div>
            <div class="d-flex justify-content-center mt-3">
                <div class="text-center justify-content-between w-25">
                    <a href=@($"/round/edit/{roundId}") class="btn btn-outline-primary">Edit</a>
                    <a href=@($"/round/delete/{roundId}") class="btn btn-outline-danger">Delete</a>
                    <hr />
                    <a href="/round">Back to Round Index</a>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int roundId { get; set; }

    public RoundDetails round { get; set; }

    protected override async Task OnInitializedAsync()
    {
        round = await http.GetFromJsonAsync<RoundDetails>($"/api/golfround/{roundId}");
    }
}
