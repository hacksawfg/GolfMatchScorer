@page "/team/delete/{teamId:int}"
@using GolfMatchScore.Shared.Models.Team
@attribute [Authorize]
@inject HttpClient http
@inject NavigationManager navigation


@if (message != null)
{
    <h2 class="text-danger">@message</h2>
}

@if (team != null)
{
    <div class="card w-75 mx-auto p-4">

        <h3 class="card-title">Confirm Team Deletion</h3>
        <div class="container">
            <div class="card-header d-flex justify-content-between">
                <span>School: @team.TeamSchool</span>
            </div>
            <div class="card-body">
                <p>Coach: @team.TeamCoachFirstName @team.TeamCoachLastName</p>
            </div>
        </div>
        <div class="d-flex justify-content-center mt-3">
            <div class="text-center justify-content between w-50">
                <a href=@($"/team/{teamId}") class="btn btn-outline-primary">Back to Team</a>
                <a href=# @onclick="HandleClick" class="btn btn-danger text-white">Delete Team</a>
            </div>
        </div>
    </div>
}
else
{
    <p><em>Loading...</em></p>
}

@code {
    [Parameter]
    public int teamId { get; set; }
    public TeamDetail team { get; set; }
    public string message { get; set; }

    protected override async Task OnInitializedAsync()
    {
        team = await http.GetFromJsonAsync<TeamDetail>($"/api/team/{teamId}");
    }

    private async void HandleClick()
    {
        var deleteCourse = await http.DeleteAsync($"/api/team/delete/{teamId}");
        if (deleteCourse.IsSuccessStatusCode)
        {
            navigation.NavigateTo("/team");
        }
        else
        {
            message = "Failed to remove team";
        }
    }
}
